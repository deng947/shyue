package org.cb.zframe.service;

import org.cb.zframe.sample.Computer;
import org.cb.zframe.sample.Person;
import org.cb.zframe.service.GenericManager;
/**
 * Manager test<br>
 * Freemarker AutoGenerated
 * 
 * @date 2009-03-13 16:46:15 
 * 
 */
public class ComputerManagerTest extends BaseManagerTestCase {

	private GenericManager<Computer, Long> computerManager;

	public void setComputerManager(GenericManager<Computer, Long> computerManager) {
		this.computerManager = computerManager;
	}
	
		
	private GenericManager<Person, Long> personManager;

	public void setPersonManager(GenericManager<Person, Long> personManager) {
		this.personManager = personManager;
	}

	public void testAddUpdateAndRemove() throws Exception {
		Computer computer = new Computer();
		computer.setName("name1");	

		computer = computerManager.save(computer);
		assertEquals("name1", computer.getName());

		log.debug("update computer...");
		computer.setName("name2");	

		computer = computerManager.get(computer.getId());
		assertEquals("name2", computer.getName());

		log.debug("removing computer...");

		computerManager.delete(computer.getId());

		try {
			computer = computerManager.get(computer.getId());
			fail("Expected 'Exception' not thrown");
		} catch (Exception e) {
			log.debug(e.toString());
			assertNotNull(e);
		}
	}
}
