package org.cb.zframe.service;

import org.cb.zframe.sample.Person;
import org.cb.zframe.service.GenericManager;
/**
 * Manager test<br>
 * Freemarker AutoGenerated
 * 
 * @date 2009-03-13 16:46:16 
 * 
 */
public class PersonManagerTest extends BaseManagerTestCase {

	private GenericManager<Person, Long> personManager;

	public void setPersonManager(GenericManager<Person, Long> personManager) {
		this.personManager = personManager;
	}
	

	public void testAddUpdateAndRemove() throws Exception {
		Person person = new Person();
		person.setName("name1");	
		person.setEmail("email1");	
		person.setAddress("address1");	
		person.setAge(1);	

		person = personManager.save(person);
		assertEquals("name1", person.getName());
		assertEquals("email1", person.getEmail());
		assertEquals("address1", person.getAddress());
		assertEquals(1, person.getAge());

		log.debug("update person...");
		person.setName("name2");	
		person.setEmail("email2");	
		person.setAddress("address2");	
		person.setAge(2);	

		person = personManager.get(person.getId());
		assertEquals("name2", person.getName());
		assertEquals("email2", person.getEmail());
		assertEquals("address2", person.getAddress());
		assertEquals(2, person.getAge());

		log.debug("removing person...");

		personManager.delete(person.getId());

		try {
			person = personManager.get(person.getId());
			fail("Expected 'Exception' not thrown");
		} catch (Exception e) {
			log.debug(e.toString());
			assertNotNull(e);
		}
	}
}
