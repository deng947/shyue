package org.cb.zframe.service;

import org.cb.zframe.auth.Dept;
import org.cb.zframe.auth.Org;
import org.cb.zframe.service.GenericManager;
/**
 * Manager test<br>
 * Freemarker AutoGenerated
 * 
 * @date 2009-03-11 14:21:54 
 * 
 */
public class DeptManagerTest extends BaseManagerTestCase {

	private GenericManager<Dept, Long> deptManager;

	public void setDeptManager(GenericManager<Dept, Long> deptManager) {
		this.deptManager = deptManager;
	}
	
		
	private GenericManager<Org, Long> orgManager;

	public void setOrgManager(GenericManager<Org, Long> orgManager) {
		this.orgManager = orgManager;
	}

	public void testAddUpdateAndRemove() throws Exception {
		Dept dept = new Dept();
		dept.setName("name1");	
		dept.setSpell("spell1");	
		dept.setTest("test1");	

		dept = deptManager.save(dept);
		assertEquals("name1", dept.getName());
		assertEquals("spell1", dept.getSpell());
		assertEquals("test1", dept.getTest());

		log.debug("update dept...");
		dept.setName("name2");	
		dept.setSpell("spell2");	
		dept.setTest("test2");	

		dept = deptManager.get(dept.getId());
		assertEquals("name2", dept.getName());
		assertEquals("spell2", dept.getSpell());
		assertEquals("test2", dept.getTest());

		log.debug("removing dept...");

		deptManager.delete(dept.getId());

		try {
			dept = deptManager.get(dept.getId());
			fail("Expected 'Exception' not thrown");
		} catch (Exception e) {
			log.debug(e.toString());
			assertNotNull(e);
		}
	}
}
