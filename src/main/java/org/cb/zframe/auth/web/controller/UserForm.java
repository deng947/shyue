package org.cb.zframe.auth.web.controller;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import org.cb.zframe.auth.User;
import org.cb.zframe.service.GenericManager;

/**
 * Handle Form (New Update Delete)<br>
 * Freemarker AutoGenerated
 * 
 * @date 2009-02-17 17:30:32 
 * 
 */
@Controller
@RequestMapping("/userForm.do")
public class UserForm {
	private final Logger log = LoggerFactory.getLogger(getClass());

	@Autowired
	@Qualifier("userManager")
	private GenericManager<User, Long> userManager;

	public void setUserManager(GenericManager<User, Long> userManager) {
		this.userManager = userManager;
	} 
	
	/**
	 * enter form page
	 * 
	 * @param id
	 * @param model
	 */
	@RequestMapping(method = RequestMethod.GET)
	public String setupForm(
			@RequestParam(value = "id", required = false) Long id,
			ModelMap model) {
		User user;
		if (id == null || id == 0L) {
			user = new User();
		} else {
			user = userManager.get(id);
		}
		model.addAttribute("user",user);
		return "auth/userForm";

	}
 
 	/**
	 * submited
	 * 
	 * @param user
	 * @param delete
	 * @param result
	 * @param status
	 * @return
	 */
	@RequestMapping(method = RequestMethod.POST)
	public String processSubmit(@ModelAttribute("user") User user,
			@RequestParam(value = "delete", required = false) String delete,
			HttpServletRequest request) {
		if (delete != null) {
			userManager.delete(user.getId());
			//return "redirect:user.do";
			return "redirect:userList.do";
		} else {
			user = userManager.save(user);
			return "redirect:userList.do";
		}
	}
}